// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sorteio_RifaMVC.Data;

#nullable disable

namespace Sorteio_RifaMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sorteio_Rifa.Models.Concorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcorrenteId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SorteioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Concorrentes");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Concorrente_Sorteio", b =>
                {
                    b.Property<int>("ConcorrenteId")
                        .HasColumnType("int");

                    b.Property<int>("SorteioId")
                        .HasColumnType("int");

                    b.HasKey("ConcorrenteId", "SorteioId");

                    b.HasIndex("SorteioId");

                    b.ToTable("Concorrentes_Sorteios");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.NumeroSorteado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcorrenteId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("SorteioId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ConcorrenteId");

                    b.HasIndex("SorteioId");

                    b.ToTable("NumerosSorteados");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Organizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCelularOrganizador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizadores");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Sorteio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataSorteio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizadorId")
                        .HasColumnType("int");

                    b.Property<string>("Premio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Sorteios");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Concorrente_Sorteio", b =>
                {
                    b.HasOne("Sorteio_Rifa.Models.Concorrente", "Concorrente")
                        .WithMany("Concorrentes_Sorteios")
                        .HasForeignKey("ConcorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sorteio_Rifa.Models.Sorteio", "Sorteio")
                        .WithMany("Concorrentes_Sorteios")
                        .HasForeignKey("SorteioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concorrente");

                    b.Navigation("Sorteio");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.NumeroSorteado", b =>
                {
                    b.HasOne("Sorteio_Rifa.Models.Concorrente", "Concorrente")
                        .WithMany("NumerosSorteados")
                        .HasForeignKey("ConcorrenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sorteio_Rifa.Models.Sorteio", "Sorteio")
                        .WithMany("NumerosSorteados")
                        .HasForeignKey("SorteioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concorrente");

                    b.Navigation("Sorteio");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Sorteio", b =>
                {
                    b.HasOne("Sorteio_Rifa.Models.Organizador", "Organizador")
                        .WithMany("Sorteios")
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Concorrente", b =>
                {
                    b.Navigation("Concorrentes_Sorteios");

                    b.Navigation("NumerosSorteados");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Organizador", b =>
                {
                    b.Navigation("Sorteios");
                });

            modelBuilder.Entity("Sorteio_Rifa.Models.Sorteio", b =>
                {
                    b.Navigation("Concorrentes_Sorteios");

                    b.Navigation("NumerosSorteados");
                });
#pragma warning restore 612, 618
        }
    }
}
